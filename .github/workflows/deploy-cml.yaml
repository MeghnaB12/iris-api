
name: CML Iris API CD Pipeline
on:
  push:
    branches: [ "main" ]
permissions:
  contents: read
  discussions: write
jobs:
  train-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # Match runner environment
        run: |
          echo "Setting up Python 3.10"
          python --version

      - name: Install Cython and numpy
        run: |
          echo "Installing Cython and numpy"
          python -m pip install Cython==3.0.11 numpy==1.26.4
          python -m pip list

      - name: Install dependencies
        run: |
          echo "Installing remaining dependencies"
          python -m pip install --no-cache-dir -r requirements.txt
          python -m pip list

      - name: Setup CML
        uses: iterative/setup-cml@v2
        with:
          version: 'latest'  # Avoid version issues
        run: |
          echo "Setting up CML"
          cml --version

      - name: Install CML CLI fallback
        if: failure()
        run: |
          echo "Installing CML CLI manually"
          npm install -g @dvcorg/cml
          cml --version
        env:
          NODE_VERSION: 16
        continue-on-error: true

      - name: Train model and generate report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
        run: |
          echo "Starting model training"
          python train.py --output plot.png || echo "Training failed"
          ls -l plot.png || echo "Plot file not found"
          echo '## Iris Model Training Report' > report.md
          echo '![Training Plot](./plot.png)' >> report.md
          cml comment create --publish report.md || echo "CML comment creation failed"

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: workoutvideos
        run: |
          echo "Setting up gcloud CLI"
          gcloud version

      - name: Configure Docker for GCR
        run: |
          echo "Configuring Docker for GCR"
          gcloud --quiet auth configure-docker || echo "Docker configuration failed"

      - name: Build and push Docker image
        run: |
          echo "Building Docker image"
          docker build -t gcr.io/workoutvideos/iris-api:$GITHUB_SHA .
          echo "Pushing Docker image"
          docker push gcr.io/workoutvideos/iris-api:$GITHUB_SHA || echo "Docker push failed"

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
        with:
          cluster_name: iris-cluster
          location: us-central1
          credentials: ${{ secrets.GKE_SA_KEY }}
        run: |
          echo "Fetching GKE credentials"
          kubectl version --client

      - name: Deploy to GKE
        run: |
          echo "Applying Kubernetes manifests"
          kubectl apply -f k8s/deployment.yaml || echo "Kubectl apply failed"
          echo "Updating deployment image"
          kubectl set image deployment/iris-api iris-api=gcr.io/workoutvideos/iris-api:$GITHUB_SHA || echo "Image update failed"
          echo "Checking rollout status"
          kubectl rollout status deployment/iris-api || echo "Rollout status check failed"
